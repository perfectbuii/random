opts.plugins = opts.plugins || {};
opts.plugins.legend = {
    display: true,
    position: "left", // Position the legend on the left
    align: "start",   // Align the legend items to the top
    labels: {
        boxWidth: 20, // Width of the legend box
        padding: 10,  // Padding between legend items
        font: {
            size: 12 // Font size for legend labels
        }
    }
};

package models

import (
	"fmt"
	"strconv"
)

const (
	ChartBorderWidth = 1.0
)

// Refined 30-Color Palette for Line Charts (Relaxing for the Eyes but Easy to Detect)
var BorderColor = []string{
	"#6CB6FF", // Soft Blue (Popular for informational elements)
	"#FF6C6C", // Soft Red (Popular for critical elements)
	"#6CFF6C", // Soft Green (Popular for success elements)
	"#FFD36C", // Soft Yellow (Popular for warnings)
	"#A78BFA", // Soft Purple
	"#FF9AA2", // Light Coral
	"#FFB347", // Soft Orange
	"#77DD77", // Pastel Green
	"#AEC6CF", // Light Cyan
	"#CFCFCF", // Light Gray
	"#FFB6C1", // Light Pink
	"#FDFD96", // Pastel Yellow
	"#B39EB5", // Lavender Gray
	"#779ECB", // Soft Steel Blue
	"#FF6961", // Light Salmon
	"#CB99C9", // Pastel Violet
	"#F49AC2", // Pastel Magenta
	"#C23B22", // Burnt Sienna
	"#03C03C", // Dark Pastel Green
	"#FFB347", // Pastel Orange
	"#FFD1DC", // Pastel Pink
	"#CFCFC4", // Light Beige
	"#B19CD9", // Soft Lavender
	"#DEA5A4", // Pastel Rose
	"#AEC6CF", // Soft Turquoise
	"#FDFD96", // Soft Gold
	"#77DD77", // Light Lime
	"#FF6961", // Soft Crimson
	"#779ECB", // Soft Dodger Blue
	"#FFB347", // Peach
}

// BackgroundColor uses 0.2 alpha for subtle filled areas under lines/bars
var BackgroundColor = func() []string {
	alpha := 0.2
	colors := []string{}
	for _, hex := range BorderColor {
		colors = append(colors, hexToRGBA(hex, alpha))
	}
	return colors
}()

// Helper: convert HEX to RGBA string with alpha
func hexToRGBA(hex string, alpha float64) string {
	r, _ := strconv.ParseInt(hex[1:3], 16, 64)
	g, _ := strconv.ParseInt(hex[3:5], 16, 64)
	b, _ := strconv.ParseInt(hex[5:7], 16, 64)
	return fmt.Sprintf("rgba(%d, %d, %d, %.2f)", r, g, b, alpha)
}
